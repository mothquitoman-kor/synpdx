% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{synpdx_fit}
\alias{synpdx_fit}
\title{Fit and analyze synpdx in one call}
\usage{
synpdx_fit(
  data,
  control,
  drug_a,
  drug_b,
  combo,
  B = 100,
  out_dir = NULL,
  seed = 990202
)
}
\arguments{
\item{data}{data.frame with columns \code{subject}, \code{time}, \code{treatment}, \code{logvol_norm}.}

\item{control}{character. Control arm name.}

\item{drug_a}{character. Drug A arm name.}

\item{drug_b}{character. Drug B arm name.}

\item{combo}{character. Combination arm name.}

\item{B}{integer. Bootstrap replicates.}

\item{out_dir}{character or NULL. Output directory for figures/CSVs.}

\item{seed}{integer. Random seed for SAEM fitting and bootstrap resampling.}
}
\value{
list(fit, plot, Di, chisq, bootstrap)
}
\description{
Runs model selection + fitting, plots subject predictions, computes per-subject
distances, performs chi-square group test, and runs bootstrap CIs.
}
\examples{
\dontrun{
# Example 1: run on your CSV (Windows path -> use forward slashes)
library(synpdx)
csv <- "C:/Users/data.csv"
df  <- read.csv(csv, stringsAsFactors = FALSE)

# Required columns: subject, time, treatment, logvol_norm
stopifnot(all(c("subject","time","treatment","logvol_norm") \%in\% names(df)))

res <- synpdx_fit(
  df,
  control = "control",
  drug_a  = "BYL719",
  drug_b  = "binimetinib",
  combo   = "combination",
  B       = 200,
  seed    = 1234,
  out_dir = "synpdx_outputs"
)
print(res$chisq$overall)
res$bootstrap$summary
res$plot

# Example 2: if your file has raw volumes 'volume' instead of log-normalized:
# Create logvol_norm = log(V(t)/V(0)) per subject-arm.
# library(dplyr)
# df <- df \%>\%
#   dplyr::group_by(subject, treatment) \%>\%
#   dplyr::arrange(time, .by_group = TRUE) \%>\%
#   dplyr::mutate(logvol_norm = log(volume / dplyr::first(volume))) \%>\%
#   dplyr::ungroup()
}

}
